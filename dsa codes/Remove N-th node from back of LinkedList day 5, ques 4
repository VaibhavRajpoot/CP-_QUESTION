link --   https://leetcode.com/problems/remove-nth-node-from-end-of-list/submissions/



/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        int c=0;
        ListNode* temp1=head;
        if(head ==NULL || head->next == NULL)
        {
            return NULL;
        }
        if(c - n == 0)
         {
             head = head->next;
             return head;
         }
        while(temp1!=NULL)
        {
            c++;
            temp1=temp1->next;

        }
        int d=c-n;
        

        ListNode* temp=head;
        ListNode* slow=head;
        if(d==0)
        {
            head=head->next;
            return head;
        }
        
        for(int i=0;i<d;i++)
        {
            slow=temp;
            temp=temp->next;
        }
        // temp1=temp->next;
        // temp1=temp1->next;
        //temp->next=temp1;
        slow->next=temp->next;
        return head;
    }
};
